<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- It register the beans in context and scan the annotations inside beans and activate them -->
    <context:component-scan base-package="common" />

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <!-- This allow for dispatching requests to Controllers -->
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving
        up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/jsp/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <!-- This resolves messages from resource bundles for different locales -->
    <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <beans:property name="basename" value="messages.messages" />
    </beans:bean>

    <!-- To validate the posted add form -->
    <beans:bean id="stationFormValidator" class="common.validator.StationFormValidator" />

    <!-- Datasource -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
        <beans:property name="url" value="jdbc:mysql://localhost:3306/mysql?autoReconnect=true&amp;useSSL=false" />
        <beans:property name="username" value="ddimasik" />
        <beans:property name="password" value="1qaz2wsX" />
    </beans:bean>

    <!-- This produces a container-managed EntityManagerFactory;
         rather than application-managed EntityManagerFactory as in case of LocalEntityManagerFactoryBean-->
    <beans:bean id="entityManagerFactoryBean"
                class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <!-- This makes /META-INF/persistence.xml is no longer necessary -->
        <beans:property name="packagesToScan" value="common.model" />
        <!-- JpaVendorAdapter implementation for Hibernate EntityManager.
             Exposes Hibernate's persistence provider and EntityManager extension interface -->
        <beans:property name="jpaVendorAdapter">
            <beans:bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </beans:property>
        <beans:property name="jpaProperties">
            <beans:props>
                <!--<beans:prop key="hibernate.hbm2ddl.auto">validate</beans:prop>-->
                <!--<beans:prop key="hibernate.hbm2ddl.auto">create</beans:prop>-->
                <beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <!-- This transaction manager is appropriate for applications that use a single JPA EntityManagerFactory for transactional data access.
        JTA (usually through JtaTransactionManager) is necessary for accessing multiple transactional resources within the same transaction. -->
    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactoryBean" />
    </beans:bean>

    <!-- responsible for registering the necessary Spring components that power annotation-driven transaction management;
        such as when @Transactional methods are invoked -->
    <tx:annotation-driven />

    <beans:bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <beans:property name="converters">
            <beans:list>
                <beans:ref bean="entityToDtoConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <beans:bean id="entityToDtoConverter" class="common.service.EntityToDtoConverterImpl" />
    <beans:bean id="ticketEntityToDtoConverter" class="common.service.TicketEntityToDtoConverterImpl" />

</beans:beans>
